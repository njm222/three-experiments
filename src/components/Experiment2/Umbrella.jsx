/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef, useMemo, memo } from 'react';
import { useFrame } from '@react-three/fiber';
import { useGLTF } from '@react-three/drei';
// eslint-disable-next-line import/no-unresolved
import { useConvexPolyhedron, useBox } from '@react-three/cannon';
import * as THREE from 'three';
import { toConvexProps } from '../../helpers/toConvexProps';

const adjustedScale = 0.1;

function Umbrella(props) {
  const { nodes, materials } = useGLTF('/models/umbrella/umbrella.glb');

  const geo = useMemo(() => toConvexProps(nodes.Object_3.geometry), [nodes]);
  console.log(geo);
  const ref = useRef();
  // const [ref, api] = useConvexPolyhedron(() => ({
  //   rotation: [-Math.PI / 2, 0, Math.PI / 2],
  //   position: [0, 10, 5],
  //   mass: 100,
  //   args: geo,
  // }));

  return (
    <group
      ref={ref}
      {...props}
      dispose={null}
    >
      <mesh
        scale={[adjustedScale, adjustedScale, adjustedScale]}
        geometry={nodes.Object_3.geometry}
        material={materials.initialShadingGroup}
      />
    </group>
  );
}

export default memo(Umbrella);

useGLTF.preload('/models/umbrella/umbrella.glb');
